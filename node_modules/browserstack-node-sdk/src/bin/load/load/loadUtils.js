'use strict';

const fs = require('fs');
const path = require('path');
const logger = require('../../helpers/logger').winstonLogger;

/**
 * Determines the path of the browserstack-load YAML config.
 * @param {object} argv - The parsed command-line arguments (e.g., yargs.argv).
 * @returns {string|undefined} The resolved config file path, or throws if none found.
 */
function getLoadConfigPath(argv) {
  logger.debug(`Checking for config file with arguments: ${JSON.stringify(argv)}`);
  try {
    const cliArgs = argv._ || [];
    // Check if this is a "load run" command
    const isLoadRun = (argv._[0] === 'load' && argv.subcommand === 'run');
    if (isLoadRun) {
      // Check if config file was specified via --config-file flag
      if (argv['config-file'] || argv.cf) {
        const configFile = argv['config-file'] || argv.cf;
        const potentialPath = path.resolve(configFile);
        logger.debug(`Config file specified: ${configFile} and Resolved path: ${potentialPath}`);

        if (potentialPath.endsWith('.yml') || potentialPath.endsWith('.yaml')) {
          logger.info(`Using specified config file: ${potentialPath}`);

          return potentialPath;
        }
      }
    }
    // Look for default config files
    const defaultConfigFiles = [
      'browserstack-load.yml',
      'browserstack-load.yaml',
      'browserstack.yml',
      'browserstack.yaml'
    ];

    logger.debug('Checking for config in default config files...');

    for (const fileName of defaultConfigFiles) {
      const filePath = path.join(process.cwd(), fileName);
      logger.debug(`Checking for: ${filePath}`);

      if (fs.existsSync(filePath)) {
        logger.debug(`Found config file: ${filePath}`);

        return filePath;
      }
    }
  } catch (err) {
    logger.error(`Failed to load browserstack config: ${err.message}`);
  }
}

function sleep() {
  return new Promise(resolve => setTimeout(resolve, 100));
}

module.exports = {
  getLoadConfigPath,
  sleep
};
